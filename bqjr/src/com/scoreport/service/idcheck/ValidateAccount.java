
package com.scoreport.service.idcheck;

import java.net.MalformedURLException;
import java.net.URL;
import java.util.logging.Logger;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;

import com.amarsoft.awe.Configure;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.6 in JDK 6
 * Generated source version: 2.1
 * 
 */
@WebServiceClient(name = "ValidateAccount", targetNamespace = "http://webservice.bqjr.com", wsdlLocation = "")
public class ValidateAccount
    extends Service
{

    private final static URL VALIDATEACCOUNT_WSDL_LOCATION;
    private final static Logger logger = Logger.getLogger(ValidateAccount.class.getName());

    static {
        URL url = null;
        String id_check_url = null;
        try {
        	URL baseUrl;
        	id_check_url = Configure.getInstance().getConfigure("id_check_url");
//        	id_check_url = "http://10.29.1.50:7002/bqdk/service/ValidateAccount?wsdl";10.28.1.20:7001
//        	id_check_url = "http://10.28.1.20:7001/payment/service/ValidateAccount?wsdl";
            baseUrl = ValidateAccount.class.getResource(".");
            url = new URL(baseUrl, id_check_url);
        } catch (MalformedURLException e) {
            logger.warning("Failed to create URL for the wsdl Location: " + id_check_url + ", retrying as a local file");
            logger.warning(e.getMessage());
        } catch (Exception e) {
			e.printStackTrace();
		}
        VALIDATEACCOUNT_WSDL_LOCATION = url;
    }

    public ValidateAccount(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public ValidateAccount() {
        super(VALIDATEACCOUNT_WSDL_LOCATION, new QName("http://webservice.bqjr.com", "ValidateAccount"));
    }

    /**
     * 
     * @return
     *     returns ValidateAccountPortType
     */
    @WebEndpoint(name = "ValidateAccountHttpPort")
    public ValidateAccountPortType getValidateAccountHttpPort() {
        return super.getPort(new QName("http://webservice.bqjr.com", "ValidateAccountHttpPort"), ValidateAccountPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ValidateAccountPortType
     */
    @WebEndpoint(name = "ValidateAccountHttpPort")
    public ValidateAccountPortType getValidateAccountHttpPort(WebServiceFeature... features) {
        return super.getPort(new QName("http://webservice.bqjr.com", "ValidateAccountHttpPort"), ValidateAccountPortType.class, features);
    }

}
